{"version":3,"sources":["components/MapView.js","components/ChatView.js","components/Pasajeros.js","components/FlightsView.js","App.js","reportWebVitals.js","index.js"],"names":["markerIcon","L","icon","iconUrl","iconSize","MapView","useState","trayectorias","setTrayectorias","setAuxiliar","aviones","setAviones","useEffect","socket","io","path","emit","on","data","tray_com_aux","Object","keys","map","key","code","origin","destination","aviones_aux","position","disconnect","Map","center","zoom","TileLayer","attribution","url","Marker","ruta","Polyline","positions","color","ChatView","mensajes","setMensajes","mensaje_aux","fecha","Date","toString","slice","push","prev","document","getElementById","scrollTo","console","log","className","id","name","message","date","classname","type","onClick","para_enviar","value","prueba_envio","Pasajeros","lista","FlightsView","vuelos","setVuelos","airline","plane","seats","passengers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0fac44d7.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport {Map, TileLayer, Popup, Marker, Polyline} from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/avion3.png';\r\nimport {io} from 'socket.io-client';\r\n\r\n\r\n\r\nconst markerIcon = new L.icon({\r\n    iconUrl: icon,\r\n    iconSize:[65,65],\r\n});\r\n\r\n\r\nfunction MapView() {   \r\n\r\n  const [trayectorias, setTrayectorias] = useState({});\r\n\r\n  const [auxiliar, setAuxiliar] = useState([]);\r\n  const [aviones, setAviones] = useState({});\r\n\r\n  useEffect(() => {\r\n    const socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/', {\r\n      path: \"/flights\"\r\n    });\r\n\r\n    // esta parte corresponde a la informacion de los vuelos    \r\n    socket.emit('FLIGHTS');\r\n\r\n    socket.on('FLIGHTS', (data) => {\r\n      const tray_com_aux = {}; \r\n\r\n      Object.keys(data).map((key)=> {\r\n        tray_com_aux[data[key].code] = [data[key].origin, data[key].destination];\r\n      });\r\n\r\n      setTrayectorias(tray_com_aux);\r\n\r\n    });\r\n\r\n    //aqui se actualizan las posiciones de cada uno de los aviones\r\n    // revisar en la informacion de flights, para por si es que sale un avion, sacarlo del aviones para borrar el marker\r\n\r\n    socket.on('POSITION', (data) => {\r\n      const aviones_aux = aviones;\r\n      aviones_aux[data.code] = data.position;\r\n      const vacio = [];\r\n      setAuxiliar(vacio);\r\n      // setPositions((prev) => [...prev, aviones_aux]);\r\n      setAviones(aviones_aux);\r\n      // agregar todo a la misma, y que los ultimos sean aviones y los anteriores sean puntos para marcar trayectoria\r\n     \r\n    });\r\n\r\n    return () => socket.disconnect();\r\n\r\n  }, []);\r\n    return (\r\n      <Map center={['-32.829','-70.6727']} zoom={4} >\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n        \r\n        {Object.keys(aviones).map((key)=> (\r\n          // se recorren los aviones, para actualizar los markers\r\n          <Marker key={key} position={aviones[key]} icon={markerIcon}>\r\n          </Marker>\r\n        ))}\r\n        {Object.keys(trayectorias).map((ruta, key)=>(\r\n          // se agregan las trayectorias que va a seguir cada uno de los aviones\r\n          <Polyline\r\n            key = {key}\r\n            positions = {[trayectorias[ruta][0], trayectorias[ruta][1]]}\r\n            color = \"#00008b\"\r\n            />\r\n          // <h1>{trayectorias[ruta][0]}</h1>\r\n        ))}\r\n        </Map>\r\n    );\r\n};\r\n\r\n\r\nexport default MapView;","import React, {useEffect, useState} from 'react';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {io} from 'socket.io-client';\r\n\r\n\r\nfunction ChatView() {   \r\n  // if (flag === 0){\r\n  //   var resp = prompt(\"Ingrese su username\");\r\n  //   flag = 1;\r\n  // }  \r\n  // var resp = document.getElementById(\"nickname\").value;\r\n  \r\n  const socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/', {\r\n    path: \"/flights\"\r\n  });\r\n\r\n    const [mensajes, setMensajes] = useState([]);\r\n    \r\n    function prueba_envio(){\r\n      var para_enviar = {};\r\n      para_enviar[\"name\"] = document.getElementById(\"nickname\").value;\r\n      para_enviar[\"message\"] = document.getElementById(\"mensaje_envio\").value;\r\n      socket.emit(\"CHAT\", para_enviar);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      socket.emit('CHAT');\r\n  \r\n      socket.on('CHAT', (data) => {\r\n        const mensaje_aux = mensajes;\r\n        var fecha = new Date(data[\"date\"]).toString();\r\n        fecha = fecha.slice(15,25);\r\n        data[\"date\"] = fecha;\r\n        mensaje_aux.push(data); \r\n        setMensajes((prev) => [...prev, data]);\r\n        document.getElementById(\"soyscroll\").scrollTo(100000,100000);\r\n        console.log(mensajes);\r\n      });\r\n  \r\n      return () => socket.disconnect();\r\n\r\n    }, []);\r\n\r\n      return (\r\n        <div>\r\n            <div className=\"scroll\" id=\"soyscroll\">\r\n            <h1>Â¡Hola! Chatea aqui:</h1>\r\n\r\n            {Object.keys(mensajes).map((key)=> (\r\n                <div className=\"container dark\"> \r\n                  {/* arreglar para que se vean distintos los containers */}\r\n                  <b>{mensajes[key].name}</b>\r\n                  <p>{mensajes[key].message}</p>\r\n                  <span className=\"time-right\">{mensajes[key].date}</span>\r\n                </div>\r\n            \r\n            ))}\r\n            </div>\r\n            <b>Nickname:</b>\r\n            <input\r\n                classname=\"nick\"\r\n                type=\"text\"\r\n                id = \"nickname\"\r\n                />\r\n              <div className=\"envio\">\r\n              <b>Mensaje:    </b>\r\n              <input \r\n                type=\"text\"\r\n                id = \"mensaje_envio\"\r\n                />\r\n\r\n              <button onClick={() =>prueba_envio()}>Enviar</button>\r\n            </div>\r\n          </div>\r\n      );\r\n  };\r\n  \r\n  \r\n  export default ChatView;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\n\r\nfunction Pasajeros({lista}) {   \r\n\r\n      return (\r\n            <div>\r\n            {Object.keys(lista).map((key)=> (\r\n                <li>Pasajero {key}: {lista[key].name}</li>\r\n                \r\n            ))}\r\n            </div>\r\n      );\r\n  };\r\n  \r\n  \r\n  export default Pasajeros;","import React, {useEffect, useState} from 'react';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {io} from 'socket.io-client';\r\nimport  Pasajeros from './Pasajeros';\r\n\r\n\r\n\r\nfunction FlightsView() {   \r\n\r\n  const socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/', {\r\n    path: \"/flights\"\r\n  });\r\n\r\n    const [vuelos, setVuelos] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n      socket.emit('FLIGHTS');\r\n  \r\n      socket.on('FLIGHTS', (data) => {\r\n          setVuelos(data);\r\n          console.log(vuelos);\r\n      });\r\n  \r\n      return () => socket.disconnect();\r\n\r\n    }, []);\r\n\r\n      return (\r\n        <div className=\"scroll-info\">\r\n            {Object.keys(vuelos).map((key)=> (\r\n                <div className=\"vuelo\">\r\n                    <h1 className=\"h1vuelos\">{vuelos[key].code}</h1>\r\n                        <li>Aerolinea: {vuelos[key].airline}</li>\r\n                        <li>Coordenadas origen: {vuelos[key].origin[0]}, {vuelos[key].origin[1]}</li>\r\n                        <li>Coordenadas destino: {vuelos[key].destination[0]}, {vuelos[key].destination[1]}</li>\r\n                        <li>Avion: {vuelos[key].plane}</li>\r\n                        <li>Asientos: {vuelos[key].seats}</li>\r\n                        <Pasajeros lista={vuelos[key].passengers}/>\r\n                </div>\r\n            ))}\r\n        </div>\r\n      );\r\n  };\r\n  \r\n  \r\n  export default FlightsView;","import './App.css';\nimport MapView from './components/MapView';\nimport ChatView from './components/ChatView'\nimport FlightsView from './components/FlightsView';\n\n\n\nfunction App() {\n  return (\n    \n    <div>\n      <div className=\"mapa\">\n        <MapView/>\n      </div>\n      <div className=\"chat\">\n        <ChatView/>\n      </div>\n      <div className=\"informacion\">\n        <FlightsView/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}